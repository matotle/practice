package problems;

import java.util.Scanner;

import util.AccessorInterface;
import util.UtilMethods;

/**
 * @author Michael Totleben
 * @description This is my solution for Project Euler Question 2 'Each new term
 *              in the D sequence is generated by adding the previous two terms.
 *              By starting with 1 and 2, the first 10 terms will be: 1, 2, 3,
 *              5, 8, 13, 21, 34, 55, 89, ... By considering the terms in the
 *              Fibonacci sequence whose values do not exceed four million, find
 *              the sum of the even-valued terms.' default answer is 4613732
 */
public class P02EvenFibonacci implements AccessorInterface {

	public static void main(String[] args) {
		System.out.println("Find the sum of the even-valued terms in a Fibonacci sequence");
		P02EvenFibonacci p = new P02EvenFibonacci();
		if (UtilMethods.useCustomInputConsole()) {
			p.runCustomConsole();
		} else {
			p.runBase();
		}
	}

	public int evenFibonacciSumToMax(int max) {
		int sum = 0;
		int current = 1;
		int previous = 0;
		// go through sequence
		while (current < max) {
			int temp = current + previous;
			previous = current;
			current = temp;
			// check
			if (current < max && current % 2 == 0) {
				sum = sum + current;
			}
		}
		return sum;
	}

	public void runBase() {
		System.out.println("base input: 4000000");
		System.out.println(evenFibonacciSumToMax(4000000));

	}

	public void runCustomConsole() {
		int max;
		System.out.println("Enter max number must be 0 or greater:");
		Scanner keyboard = new Scanner(System.in);
		try {
			max = keyboard.nextInt();
			System.out.println(evenFibonacciSumToMax(max));
			// not really interested in doing complex error handinling since its not the
			// point of this excerise
		} catch (Exception e) {
			System.out.println("Bad data entered, rerunning");
			runCustomConsole();
		} finally {
			keyboard.close();
		}
	}

	@Override
	public void runCustomWeb() {
		// TODO Auto-generated method stub

	}
}
